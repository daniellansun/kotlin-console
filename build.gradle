/*
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

group 'me.sunlan'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlinVersion = '1.1.51'

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

ext {
    junitVersion = '4.12'
    gradleVersion = '4.2.1'
    jvmTargetVersion = 1.8
    rsyntaxtextareaVersion = '2.6.1'
}

sourceCompatibility = project.ext.jvmTargetVersion

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
    compile("org.jetbrains.kotlin:kotlin-script-util:${kotlinVersion}") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-script-runtime'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    compile "com.fifesoft:rsyntaxtextarea:$rsyntaxtextareaVersion"
    testCompile "junit:junit:$junitVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "$jvmTargetVersion"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "$jvmTargetVersion"
}

task kotlinConsole(type: JavaExec, dependsOn:[classes]) {
    jvmArgs '-ea', "-Xms256m", "-Xmx512m"

    main = 'me.sunlan.kotlin.console.KotlinConsoleKt'
    classpath = sourceSets.main.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = project.ext.gradleVersion
}
